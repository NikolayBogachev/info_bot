from TG.keyboards.InlineKeyboard import *
from TG.StatesGroup import *
from TG.logica.utils import *


async def command_start_handler(message: Message):

    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.full_name}, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å?",
                         reply_markup=get_start_menu_keyboard())


async def return_to_main_menu(callback: CallbackQuery, state: FSMContext):

    await state.clear()
    await replace_message_handler(callback, state,
                                  text=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {callback.from_user.full_name}, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å?",
                                  keyboard=get_start_menu_keyboard())
    await callback.answer()


async def handle_1c_menu(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=get_1c_menu_keyboard(),
        parse_mode="HTML"
    )
    await state.set_state(MainStates.C1_state)
    await callback.answer()


async def create_order(callback: CallbackQuery, state: FSMContext):

    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–°–æ–∑–¥–∞–Ω–∏–µ_–ó–∞–∫–∞–∑–∞_–ü–æ–∫—É–ø–∞—Ç–µ–ª—è_–∏_–≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ_—Å—á—ë—Ç–∞.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –°–æ–∑–¥–∞–Ω–∏–µ –ó–∞–∫–∞–∑–∞ –ü–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—á—ë—Ç–∞.",
                                keyboard=back_keyboard(),
                                new_state=C1_States.Create_order)


async def create_invoice(callback: CallbackQuery, state: FSMContext):

    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–æ—á–Ω–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≥—Ä—É–∑–æ—á–Ω–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π",
                                keyboard=back_keyboard(),
                                new_state=C1_States.Create_invoice)


async def create_contractor(callback: CallbackQuery, state: FSMContext):
    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞",
                                keyboard=back_keyboard(),
                                new_state=C1_States.Create_contractor)


async def buyer_return(callback: CallbackQuery, state: FSMContext):
    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–í–æ–∑–≤—Ä–∞—Ç –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –í–æ–∑–≤—Ä–∞—Ç –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è",
                                keyboard=back_keyboard(),
                                new_state=C1_States.Return)


async def crate_nomenclature(callback: CallbackQuery, state: FSMContext):
    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã",
                                keyboard=back_keyboard(),
                                new_state=C1_States.Create_item)


async def handle_complaints_menu(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, get_complaints_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                               new_state=MainStates.Complaints)


async def klen(callback: CallbackQuery, state: FSMContext):
    await send_html_template_callback(callback,  state,
                                      html_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/texts/klen.html",
                                      keyboard=back_keyboard(),
                                      new_state=ComplaintsStates.Klen)


async def restint(callback: CallbackQuery, state: FSMContext):
    await send_html_template_callback(callback,  state,
                                      html_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/texts/intras.html",
                                      keyboard=back_keyboard(),
                                      new_state=ComplaintsStates.Restint)


async def masterclass(callback: CallbackQuery, state: FSMContext):
    await send_html_template_callback(callback,  state,
                                      html_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/texts/masterclass.html",
                                      keyboard=back_keyboard(),
                                      new_state=ComplaintsStates.Masterclass)


async def region_50(callback: CallbackQuery, state: FSMContext):
    await send_html_template_callback(callback,  state,
                                      html_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/texts/reg_50.html",
                                      keyboard=back_keyboard(),
                                      new_state=ComplaintsStates.Region_50)


async def ru_project(callback: CallbackQuery, state: FSMContext):
    await send_html_template_callback(callback,  state,
                                      html_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/texts/ru_project.html",
                                      keyboard=back_keyboard(),
                                      new_state=ComplaintsStates.Ru_project)


async def db_menu(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, get_db_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                               new_state=MainStates.DataBase)


async def inventory(callback: CallbackQuery, state: FSMContext):
    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–ë–∞—Ä–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ë–∞—Ä–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
                                keyboard=back_keyboard(),
                                new_state=DataBase.Bar_inventory)


async def topping(callback: CallbackQuery, state: FSMContext):
    await send_document_handler(callback, state,
                                file_path="C:/Users/bogac/PycharmProjects/info_bot/TG/documents/–°–∏—Ä–æ–ø—ã, —Ç–æ–ø–∏–Ω–≥–∏, –ø—é—Ä–µ.pdf",
                                caption="–í–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –°–∏—Ä–æ–ø—ã, —Ç–æ–ø–∏–Ω–≥–∏, –ø—é—Ä–µ",
                                keyboard=back_keyboard(),
                                new_state=DataBase.Topping)


async def equipment(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–û–∂–∏–¥–∞–π—Ç–µ... üòä",
                               new_state=DataBase.Equipment)


async def stub(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                               new_state=MainStates.Stub)


async def nesting(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, get_level_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                               new_state=MainStates.Nesting)


async def nesting_lvl2(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, get_level2_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                               new_state=NestingStates.First)


async def nesting_lvl3(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, get_level3_keyboard(), text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                               new_state=NestingStates.FirstFirst)


async def third(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–û–∂–∏–¥–∞–π—Ç–µ... üòä",
                               new_state=MainStates.Nesting)


async def second(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∏—á–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ",
                               new_state=NestingStates.Second)


async def second_second(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∏—á–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ",
                               new_state=NestingStates.First)


async def first_3(callback: CallbackQuery, state: FSMContext):
    await edit_message_handler(callback, state, back_keyboard(), text="–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∏—á–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ",
                               new_state=NestingStates.FirstFirst)


async def handle_back(callback: CallbackQuery, state: FSMContext):

    current_state = await state.get_state()
    match  current_state:
        case (MainStates.C1_state.state |
              MainStates.Complaints.state |
              MainStates.DataBase.state |
              MainStates.Stub.state |
              MainStates.Nesting.state):
            #–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await return_to_main_menu(callback, state)

        case (C1_States.Create_order.state |
              C1_States.Create_invoice.state |
              C1_States.Create_contractor.state |
              C1_States.Return |
              C1_States.Create_item):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é 1C
            await replace_message_handler(callback, state, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                          keyboard=get_1c_menu_keyboard(),
                                          new_state=MainStates.C1_state)

        case (ComplaintsStates.Klen.state |
              ComplaintsStates.Restint.state |
              ComplaintsStates.Masterclass.state |
              ComplaintsStates.Region_50.state |
              ComplaintsStates.Ru_project.state):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é Complaints
            await edit_message_handler(callback, state, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                       keyboard=get_complaints_keyboard(),
                                       new_state=MainStates.Complaints)

        case (DataBase.Bar_inventory.state |
              DataBase.Topping.state |
              DataBase.Equipment.state):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é 1C
            await replace_message_handler(callback, state, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                          keyboard=get_db_keyboard(),
                                          new_state=MainStates.DataBase)

        case (NestingStates.First.state |
              NestingStates.Second.state):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é Complaints
            await edit_message_handler(callback, state, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                       keyboard=get_level_keyboard(),
                                       new_state=MainStates.Nesting)
        case NestingStates.FirstFirst.state:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é Complaints
            await edit_message_handler(callback, state, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                       keyboard=get_level2_keyboard(),
                                       new_state=NestingStates.First)